"use strict";var $=Object.create;var R=Object.defineProperty;var Z=Object.getOwnPropertyDescriptor;var X=Object.getOwnPropertyNames;var ee=Object.getPrototypeOf,re=Object.prototype.hasOwnProperty;var se=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),te=(t,e)=>{for(var r in e)R(t,r,{get:e[r],enumerable:!0})},f=(t,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of X(e))!re.call(t,o)&&o!==r&&R(t,o,{get:()=>e[o],enumerable:!(s=Z(e,o))||s.enumerable});return t};var g=(t,e,r)=>(r=t!=null?$(ee(t)):{},f(e||!t||!t.__esModule?R(r,"default",{value:t,enumerable:!0}):r,t)),ne=t=>f(R({},"__esModule",{value:!0}),t);var J=se((xe,V)=>{V.exports=Worker});var ge={};te(ge,{AsyncDuckDB:()=>h,AsyncDuckDBConnection:()=>u,AsyncDuckDBDispatcher:()=>O,AsyncPreparedStatement:()=>p,AsyncResultStreamIterator:()=>T,ConsoleLogger:()=>b,LogEvent:()=>M,LogLevel:()=>v,LogOrigin:()=>B,LogTopic:()=>G,PACKAGE_NAME:()=>A,PACKAGE_VERSION:()=>w,PACKAGE_VERSION_MAJOR:()=>ue,PACKAGE_VERSION_MINOR:()=>Te,PACKAGE_VERSION_PATCH:()=>Re,StatusCode:()=>x,VoidLogger:()=>y,WorkerRequestType:()=>S,WorkerResponseType:()=>N,WorkerTask:()=>n,createWorker:()=>ke,getJsDelivrBundles:()=>me,getLogEventLabel:()=>oe,getLogLevelLabel:()=>ie,getLogOriginLabel:()=>de,getLogTopicLabel:()=>ae,getPlatformFeatures:()=>K,isFirefox:()=>pe,isNode:()=>W,isSafari:()=>_e,selectBundle:()=>Ie});module.exports=ne(ge);var v=(c=>(c[c.NONE=0]="NONE",c[c.DEBUG=1]="DEBUG",c[c.INFO=2]="INFO",c[c.WARNING=3]="WARNING",c[c.ERROR=4]="ERROR",c))(v||{}),G=(d=>(d[d.NONE=0]="NONE",d[d.CONNECT=1]="CONNECT",d[d.DISCONNECT=2]="DISCONNECT",d[d.OPEN=3]="OPEN",d[d.QUERY=4]="QUERY",d[d.INSTANTIATE=5]="INSTANTIATE",d))(G||{}),M=(d=>(d[d.NONE=0]="NONE",d[d.OK=1]="OK",d[d.ERROR=2]="ERROR",d[d.START=3]="START",d[d.RUN=4]="RUN",d[d.CAPTURE=5]="CAPTURE",d))(M||{}),B=(c=>(c[c.NONE=0]="NONE",c[c.WEB_WORKER=1]="WEB_WORKER",c[c.NODE_WORKER=2]="NODE_WORKER",c[c.BINDINGS=3]="BINDINGS",c[c.ASYNC_DUCKDB=4]="ASYNC_DUCKDB",c))(B||{}),y=class{log(e){}},b=class{constructor(e=2){this.level=e}log(e){e.level>=this.level&&console.log(e)}};function ie(t){switch(t){case 0:return"NONE";case 1:return"DEBUG";case 2:return"INFO";case 3:return"WARNING";case 4:return"ERROR";default:return"?"}}function oe(t){switch(t){case 0:return"NONE";case 1:return"OK";case 2:return"ERROR";case 3:return"START";case 4:return"RUN";case 5:return"CAPTURE";default:return"?"}}function ae(t){switch(t){case 1:return"CONNECT";case 2:return"DISCONNECT";case 5:return"INSTANTIATE";case 3:return"OPEN";case 4:return"QUERY";default:return"?"}}function de(t){switch(t){case 0:return"NONE";case 1:return"WEB WORKER";case 2:return"NODE WORKER";case 3:return"DUCKDB BINDINGS";case 4:return"DUCKDB";default:return"?"}}var x=(e=>(e[e.SUCCESS=0]="SUCCESS",e))(x||{});var E=g(require("apache-arrow"));var u=class{constructor(e,r){this._bindings=e,this._conn=r}get bindings(){return this._bindings}async close(){return this._bindings.disconnect(this._conn)}useUnsafe(e){return e(this._bindings,this._conn)}async query(e){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let r=await this._bindings.runQuery(this._conn,e),s=E.RecordBatchReader.from(r);return console.assert(s.isSync()),console.assert(s.isFile()),new E.Table(s)}async send(e){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let r=await this._bindings.startPendingQuery(this._conn,e);for(;r==null;)r=await this._bindings.pollPendingQuery(this._conn);let s=new T(this._bindings,this._conn,r),o=await E.RecordBatchReader.from(s);return console.assert(o.isAsync()),console.assert(o.isStream()),o}async cancelSent(){return await this._bindings.cancelPendingQuery(this._conn)}async getTableNames(e){return await this._bindings.getTableNames(this._conn,e)}async prepare(e){let r=await this._bindings.createPrepared(this._conn,e);return new p(this._bindings,this._conn,r)}async insertArrowTable(e,r){let s=E.tableToIPC(e,"stream");await this.insertArrowFromIPCStream(s,r)}async insertArrowFromIPCStream(e,r){await this._bindings.insertArrowFromIPCStream(this._conn,e,r)}async insertCSVFromPath(e,r){await this._bindings.insertCSVFromPath(this._conn,e,r)}async insertJSONFromPath(e,r){await this._bindings.insertJSONFromPath(this._conn,e,r)}},T=class{constructor(e,r,s){this.db=e;this.conn=r;this.header=s;this._first=!0,this._depleted=!1,this._inFlight=null}async next(){if(this._first)return this._first=!1,{done:!1,value:this.header};if(this._depleted)return{done:!0,value:null};let e;return this._inFlight!=null?(e=await this._inFlight,this._inFlight=null):e=await this.db.fetchQueryResults(this.conn),this._depleted=e.length==0,this._depleted||(this._inFlight=this.db.fetchQueryResults(this.conn)),{done:this._depleted,value:e}}[Symbol.asyncIterator](){return this}},p=class{constructor(e,r,s){this.bindings=e,this.connectionId=r,this.statementId=s}async close(){await this.bindings.closePrepared(this.connectionId,this.statementId)}async query(...e){let r=await this.bindings.runPrepared(this.connectionId,this.statementId,e),s=E.RecordBatchReader.from(r);return console.assert(s.isSync()),console.assert(s.isFile()),new E.Table(s)}async send(...e){let r=await this.bindings.sendPrepared(this.connectionId,this.statementId,e),s=new T(this.bindings,this.connectionId,r),o=await E.RecordBatchReader.from(s);return console.assert(o.isAsync()),console.assert(o.isStream()),o}};var S=(a=>(a.CANCEL_PENDING_QUERY="CANCEL_PENDING_QUERY",a.CLOSE_PREPARED="CLOSE_PREPARED",a.COLLECT_FILE_STATISTICS="COLLECT_FILE_STATISTICS",a.CONNECT="CONNECT",a.COPY_FILE_TO_BUFFER="COPY_FILE_TO_BUFFER",a.COPY_FILE_TO_PATH="COPY_FILE_TO_PATH",a.CREATE_PREPARED="CREATE_PREPARED",a.DISCONNECT="DISCONNECT",a.DROP_FILE="DROP_FILE",a.DROP_FILES="DROP_FILES",a.EXPORT_FILE_STATISTICS="EXPORT_FILE_STATISTICS",a.FETCH_QUERY_RESULTS="FETCH_QUERY_RESULTS",a.FLUSH_FILES="FLUSH_FILES",a.GET_FEATURE_FLAGS="GET_FEATURE_FLAGS",a.GET_TABLE_NAMES="GET_TABLE_NAMES",a.GET_VERSION="GET_VERSION",a.GLOB_FILE_INFOS="GLOB_FILE_INFOS",a.INSERT_ARROW_FROM_IPC_STREAM="INSERT_ARROW_FROM_IPC_STREAM",a.INSERT_CSV_FROM_PATH="IMPORT_CSV_FROM_PATH",a.INSERT_JSON_FROM_PATH="IMPORT_JSON_FROM_PATH",a.INSTANTIATE="INSTANTIATE",a.OPEN="OPEN",a.PING="PING",a.POLL_PENDING_QUERY="POLL_PENDING_QUERY",a.REGISTER_FILE_BUFFER="REGISTER_FILE_BUFFER",a.REGISTER_FILE_HANDLE="REGISTER_FILE_HANDLE",a.REGISTER_FILE_URL="REGISTER_FILE_URL",a.RESET="RESET",a.RUN_PREPARED="RUN_PREPARED",a.RUN_QUERY="RUN_QUERY",a.SEND_PREPARED="SEND_PREPARED",a.START_PENDING_QUERY="START_PENDING_QUERY",a.TOKENIZE="TOKENIZE",a))(S||{}),N=(l=>(l.CONNECTION_INFO="CONNECTION_INFO",l.ERROR="ERROR",l.FEATURE_FLAGS="FEATURE_FLAGS",l.FILE_BUFFER="FILE_BUFFER",l.FILE_INFOS="FILE_INFOS",l.FILE_SIZE="FILE_SIZE",l.FILE_STATISTICS="FILE_STATISTICS",l.INSTANTIATE_PROGRESS="INSTANTIATE_PROGRESS",l.LOG="LOG",l.OK="OK",l.PREPARED_STATEMENT_ID="PREPARED_STATEMENT_ID",l.QUERY_PLAN="QUERY_PLAN",l.QUERY_RESULT="QUERY_RESULT",l.QUERY_RESULT_CHUNK="QUERY_RESULT_CHUNK",l.QUERY_RESULT_HEADER="QUERY_RESULT_HEADER",l.QUERY_RESULT_HEADER_OR_NULL="QUERY_RESULT_HEADER_OR_NULL",l.REGISTERED_FILE="REGISTERED_FILE",l.SCRIPT_TOKENS="SCRIPT_TOKENS",l.SUCCESS="SUCCESS",l.TABLE_NAMES="TABLE_NAMES",l.VERSION_STRING="VERSION_STRING",l))(N||{}),n=class{constructor(e,r){this.promiseResolver=()=>{};this.promiseRejecter=()=>{};this.type=e,this.data=r,this.promise=new Promise((s,o)=>{this.promiseResolver=s,this.promiseRejecter=o})}};var i=g(require("apache-arrow"));function _(t){switch(t.typeId){case i.Type.Binary:return{sqlType:"binary"};case i.Type.Bool:return{sqlType:"bool"};case i.Type.Date:return{sqlType:"date"};case i.Type.DateDay:return{sqlType:"date32[d]"};case i.Type.DateMillisecond:return{sqlType:"date64[ms]"};case i.Type.Decimal:{let e=t;return{sqlType:"decimal",precision:e.precision,scale:e.scale}}case i.Type.Float:return{sqlType:"float"};case i.Type.Float16:return{sqlType:"float16"};case i.Type.Float32:return{sqlType:"float32"};case i.Type.Float64:return{sqlType:"float64"};case i.Type.Int:return{sqlType:"int32"};case i.Type.Int16:return{sqlType:"int16"};case i.Type.Int32:return{sqlType:"int32"};case i.Type.Int64:return{sqlType:"int64"};case i.Type.Uint16:return{sqlType:"uint16"};case i.Type.Uint32:return{sqlType:"uint32"};case i.Type.Uint64:return{sqlType:"uint64"};case i.Type.Uint8:return{sqlType:"uint8"};case i.Type.IntervalDayTime:return{sqlType:"interval[dt]"};case i.Type.IntervalYearMonth:return{sqlType:"interval[m]"};case i.Type.List:return{sqlType:"list",valueType:_(t.valueType)};case i.Type.FixedSizeBinary:return{sqlType:"fixedsizebinary",byteWidth:t.byteWidth};case i.Type.Null:return{sqlType:"null"};case i.Type.Utf8:return{sqlType:"utf8"};case i.Type.Struct:return{sqlType:"struct",fields:t.children.map(r=>m(r.name,r.type))};case i.Type.Map:{let e=t;return{sqlType:"map",keyType:_(e.keyType),valueType:_(e.valueType)}}case i.Type.Time:return{sqlType:"time[s]"};case i.Type.TimeMicrosecond:return{sqlType:"time[us]"};case i.Type.TimeMillisecond:return{sqlType:"time[ms]"};case i.Type.TimeNanosecond:return{sqlType:"time[ns]"};case i.Type.TimeSecond:return{sqlType:"time[s]"};case i.Type.Timestamp:return{sqlType:"timestamp",timezone:t.timezone||void 0};case i.Type.TimestampSecond:return{sqlType:"timestamp[s]",timezone:t.timezone||void 0};case i.Type.TimestampMicrosecond:return{sqlType:"timestamp[us]",timezone:t.timezone||void 0};case i.Type.TimestampNanosecond:return{sqlType:"timestamp[ns]",timezone:t.timezone||void 0};case i.Type.TimestampMillisecond:return{sqlType:"timestamp[ms]",timezone:t.timezone||void 0}}throw new Error(`unsupported arrow type: ${t.toString()}`)}function m(t,e){let r=_(e);return r.name=t,r}var ce=new TextEncoder,h=class{constructor(e,r=null){this._onInstantiationProgress=[];this._worker=null;this._workerShutdownPromise=null;this._workerShutdownResolver=()=>{};this._nextMessageId=0;this._pendingRequests=new Map;this._logger=e,this._onMessageHandler=this.onMessage.bind(this),this._onErrorHandler=this.onError.bind(this),this._onCloseHandler=this.onClose.bind(this),r!=null&&this.attach(r)}get logger(){return this._logger}attach(e){this._worker=e,this._worker.addEventListener("message",this._onMessageHandler),this._worker.addEventListener("error",this._onErrorHandler),this._worker.addEventListener("close",this._onCloseHandler),this._workerShutdownPromise=new Promise((r,s)=>{this._workerShutdownResolver=r})}detach(){!this._worker||(this._worker.removeEventListener("message",this._onMessageHandler),this._worker.removeEventListener("error",this._onErrorHandler),this._worker.removeEventListener("close",this._onCloseHandler),this._worker=null,this._workerShutdownResolver(null),this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async terminate(){!this._worker||(this._worker.terminate(),this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async postTask(e,r=[]){if(!this._worker){console.error("cannot send a message since the worker is not set!");return}let s=this._nextMessageId++;return this._pendingRequests.set(s,e),this._worker.postMessage({messageId:s,type:e.type,data:e.data},r),await e.promise}onMessage(e){let r=e.data;switch(r.type){case"LOG":{this._logger.log(r.data);return}case"INSTANTIATE_PROGRESS":{for(let o of this._onInstantiationProgress)o(r.data);return}}let s=this._pendingRequests.get(r.requestId);if(!s){console.warn(`unassociated response: [${r.requestId}, ${r.type.toString()}]`);return}if(this._pendingRequests.delete(r.requestId),r.type=="ERROR"){let o=new Error(r.data.message);o.name=r.data.name,o.stack=r.data.stack,s.promiseRejecter(o);return}switch(s.type){case"CLOSE_PREPARED":case"COLLECT_FILE_STATISTICS":case"COPY_FILE_TO_PATH":case"DISCONNECT":case"DROP_FILE":case"DROP_FILES":case"FLUSH_FILES":case"INSERT_ARROW_FROM_IPC_STREAM":case"IMPORT_CSV_FROM_PATH":case"IMPORT_JSON_FROM_PATH":case"OPEN":case"PING":case"REGISTER_FILE_BUFFER":case"REGISTER_FILE_HANDLE":case"REGISTER_FILE_URL":case"RESET":if(r.type=="OK"){s.promiseResolver(r.data);return}break;case"INSTANTIATE":if(this._onInstantiationProgress=[],r.type=="OK"){s.promiseResolver(r.data);return}break;case"GLOB_FILE_INFOS":if(r.type=="FILE_INFOS"){s.promiseResolver(r.data);return}break;case"GET_VERSION":if(r.type=="VERSION_STRING"){s.promiseResolver(r.data);return}break;case"GET_FEATURE_FLAGS":if(r.type=="FEATURE_FLAGS"){s.promiseResolver(r.data);return}break;case"GET_TABLE_NAMES":if(r.type=="TABLE_NAMES"){s.promiseResolver(r.data);return}break;case"TOKENIZE":if(r.type=="SCRIPT_TOKENS"){s.promiseResolver(r.data);return}break;case"COPY_FILE_TO_BUFFER":if(r.type=="FILE_BUFFER"){s.promiseResolver(r.data);return}break;case"EXPORT_FILE_STATISTICS":if(r.type=="FILE_STATISTICS"){s.promiseResolver(r.data);return}break;case"CONNECT":if(r.type=="CONNECTION_INFO"){s.promiseResolver(r.data);return}break;case"RUN_PREPARED":case"RUN_QUERY":if(r.type=="QUERY_RESULT"){s.promiseResolver(r.data);return}break;case"SEND_PREPARED":if(r.type=="QUERY_RESULT_HEADER"){s.promiseResolver(r.data);return}break;case"START_PENDING_QUERY":if(r.type=="QUERY_RESULT_HEADER_OR_NULL"){s.promiseResolver(r.data);return}break;case"POLL_PENDING_QUERY":if(r.type=="QUERY_RESULT_HEADER_OR_NULL"){s.promiseResolver(r.data);return}break;case"CANCEL_PENDING_QUERY":if(this._onInstantiationProgress=[],r.type=="SUCCESS"){s.promiseResolver(r.data);return}break;case"FETCH_QUERY_RESULTS":if(r.type=="QUERY_RESULT_CHUNK"){s.promiseResolver(r.data);return}break;case"CREATE_PREPARED":if(r.type=="PREPARED_STATEMENT_ID"){s.promiseResolver(r.data);return}break}s.promiseRejecter(new Error(`unexpected response type: ${r.type.toString()}`))}onError(e){console.error(e),console.error(`error in duckdb worker: ${e.message}`),this._pendingRequests.clear()}onClose(){if(this._workerShutdownResolver(null),this._pendingRequests.size!=0){console.warn(`worker terminated with ${this._pendingRequests.size} pending requests`);return}this._pendingRequests.clear()}async reset(){let e=new n("RESET",null);return await this.postTask(e)}async ping(){let e=new n("PING",null);await this.postTask(e)}async dropFile(e){let r=new n("DROP_FILE",e);return await this.postTask(r)}async dropFiles(){let e=new n("DROP_FILES",null);return await this.postTask(e)}async flushFiles(){let e=new n("FLUSH_FILES",null);return await this.postTask(e)}async instantiate(e,r=null,s=o=>{}){this._onInstantiationProgress.push(s);let o=new n("INSTANTIATE",[e,r]);return await this.postTask(o)}async getVersion(){let e=new n("GET_VERSION",null);return await this.postTask(e)}async getFeatureFlags(){let e=new n("GET_FEATURE_FLAGS",null);return await this.postTask(e)}async open(e){let r=new n("OPEN",e);await this.postTask(r)}async tokenize(e){let r=new n("TOKENIZE",e);return await this.postTask(r)}async connectInternal(){let e=new n("CONNECT",null);return await this.postTask(e)}async connect(){let e=await this.connectInternal();return new u(this,e)}async disconnect(e){let r=new n("DISCONNECT",e);await this.postTask(r)}async runQuery(e,r){let s=new n("RUN_QUERY",[e,r]);return await this.postTask(s)}async startPendingQuery(e,r){let s=new n("START_PENDING_QUERY",[e,r]);return await this.postTask(s)}async pollPendingQuery(e){let r=new n("POLL_PENDING_QUERY",e);return await this.postTask(r)}async cancelPendingQuery(e){let r=new n("CANCEL_PENDING_QUERY",e);return await this.postTask(r)}async fetchQueryResults(e){let r=new n("FETCH_QUERY_RESULTS",e);return await this.postTask(r)}async getTableNames(e,r){let s=new n("GET_TABLE_NAMES",[e,r]);return await this.postTask(s)}async createPrepared(e,r){let s=new n("CREATE_PREPARED",[e,r]);return await this.postTask(s)}async closePrepared(e,r){let s=new n("CLOSE_PREPARED",[e,r]);await this.postTask(s)}async runPrepared(e,r,s){let o=new n("RUN_PREPARED",[e,r,s]);return await this.postTask(o)}async sendPrepared(e,r,s){let o=new n("SEND_PREPARED",[e,r,s]);return await this.postTask(o)}async globFiles(e){let r=new n("GLOB_FILE_INFOS",e);return await this.postTask(r)}async registerFileText(e,r){let s=ce.encode(r);await this.registerFileBuffer(e,s)}async registerFileURL(e,r){r===void 0&&(r=e);let s=new n("REGISTER_FILE_URL",[e,r]);await this.postTask(s)}async registerEmptyFileBuffer(e){let r=new n("REGISTER_FILE_BUFFER",[e,new Uint8Array]);await this.postTask(r)}async registerFileBuffer(e,r){let s=new n("REGISTER_FILE_BUFFER",[e,r]);await this.postTask(s,[r.buffer])}async registerFileHandle(e,r){let s=new n("REGISTER_FILE_HANDLE",[e,r]);await this.postTask(s,[])}async collectFileStatistics(e,r){let s=new n("COLLECT_FILE_STATISTICS",[e,r]);await this.postTask(s,[])}async exportFileStatistics(e){let r=new n("EXPORT_FILE_STATISTICS",e);return await this.postTask(r,[])}async copyFileToBuffer(e){let r=new n("COPY_FILE_TO_BUFFER",e);return await this.postTask(r)}async copyFileToPath(e,r){let s=new n("COPY_FILE_TO_PATH",[e,r]);await this.postTask(s)}async insertArrowFromIPCStream(e,r,s){if(r.length==0)return;let o=new n("INSERT_ARROW_FROM_IPC_STREAM",[e,r,s]);await this.postTask(o,[r.buffer])}async insertCSVFromPath(e,r,s){if(s.columns!==void 0){let c=[];for(let d in s.columns){let k=s.columns[d];c.push(m(d,k))}s.columnsFlat=c,delete s.columns}let o=new n("IMPORT_CSV_FROM_PATH",[e,r,s]);await this.postTask(o)}async insertJSONFromPath(e,r,s){if(s.columns!==void 0){let c=[];for(let d in s.columns){let k=s.columns[d];c.push(m(d,k))}s.columnsFlat=c,delete s.columns}let o=new n("IMPORT_JSON_FROM_PATH",[e,r,s]);await this.postTask(o)}};var O=class{constructor(){this._bindings=null;this._nextMessageId=0}log(e){this.postMessage({messageId:this._nextMessageId++,requestId:0,type:"LOG",data:e},[])}sendOK(e){this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"OK",data:null},[])}failWith(e,r){let s={name:r.name,message:r.message,stack:r.stack||void 0};this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"ERROR",data:s},[])}async onMessage(e){switch(e.type){case"PING":this.sendOK(e);return;case"INSTANTIATE":this._bindings!=null&&this.failWith(e,new Error("duckdb already initialized"));try{this._bindings=await this.instantiate(e.data[0],e.data[1],r=>{this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"INSTANTIATE_PROGRESS",data:r},[])}),this.sendOK(e)}catch(r){this._bindings=null,this.failWith(e,r)}return;default:break}if(!this._bindings)return this.failWith(e,new Error("duckdb is not initialized"));try{switch(e.type){case"GET_VERSION":this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"VERSION_STRING",data:this._bindings.getVersion()},[]);break;case"GET_FEATURE_FLAGS":this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"FEATURE_FLAGS",data:this._bindings.getFeatureFlags()},[]);break;case"RESET":this._bindings.reset(),this.sendOK(e);break;case"OPEN":this._bindings.open(e.data),this.sendOK(e);break;case"DROP_FILE":this._bindings.dropFile(e.data),this.sendOK(e);break;case"DROP_FILES":this._bindings.dropFiles(),this.sendOK(e);break;case"FLUSH_FILES":this._bindings.flushFiles(),this.sendOK(e);break;case"CONNECT":{let r=this._bindings.connect();this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"CONNECTION_INFO",data:r.useUnsafe((s,o)=>o)},[]);break}case"DISCONNECT":this._bindings.disconnect(e.data),this.sendOK(e);break;case"CREATE_PREPARED":{let r=this._bindings.createPrepared(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"PREPARED_STATEMENT_ID",data:r},[]);break}case"CLOSE_PREPARED":{this._bindings.closePrepared(e.data[0],e.data[1]),this.sendOK(e);break}case"RUN_PREPARED":{let r=this._bindings.runPrepared(e.data[0],e.data[1],e.data[2]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"QUERY_RESULT",data:r},[r.buffer]);break}case"RUN_QUERY":{let r=this._bindings.runQuery(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"QUERY_RESULT",data:r},[r.buffer]);break}case"SEND_PREPARED":{let r=this._bindings.sendPrepared(e.data[0],e.data[1],e.data[2]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"QUERY_RESULT_HEADER",data:r},[r.buffer]);break}case"START_PENDING_QUERY":{let r=this._bindings.startPendingQuery(e.data[0],e.data[1]),s=[];r&&s.push(r.buffer),this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"QUERY_RESULT_HEADER_OR_NULL",data:r},s);break}case"POLL_PENDING_QUERY":{let r=this._bindings.pollPendingQuery(e.data),s=[];r&&s.push(r.buffer),this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"QUERY_RESULT_HEADER_OR_NULL",data:r},s);break}case"CANCEL_PENDING_QUERY":{let r=this._bindings.cancelPendingQuery(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"SUCCESS",data:r},[]);break}case"FETCH_QUERY_RESULTS":{let r=this._bindings.fetchQueryResults(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"QUERY_RESULT_CHUNK",data:r},[r.buffer]);break}case"GET_TABLE_NAMES":{let r=this._bindings.getTableNames(e.data[0],e.data[1]);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"TABLE_NAMES",data:r},[]);break}case"GLOB_FILE_INFOS":{let r=this._bindings.globFiles(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"FILE_INFOS",data:r},[]);break}case"REGISTER_FILE_URL":this._bindings.registerFileURL(e.data[0],e.data[1]),this.sendOK(e);break;case"REGISTER_FILE_BUFFER":this._bindings.registerFileBuffer(e.data[0],e.data[1]),this.sendOK(e);break;case"REGISTER_FILE_HANDLE":this._bindings.registerFileHandle(e.data[0],e.data[1]),this.sendOK(e);break;case"COPY_FILE_TO_PATH":this._bindings.copyFileToPath(e.data[0],e.data[1]),this.sendOK(e);break;case"COPY_FILE_TO_BUFFER":{let r=this._bindings.copyFileToBuffer(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"FILE_BUFFER",data:r},[]);break}case"COLLECT_FILE_STATISTICS":this._bindings.collectFileStatistics(e.data[0],e.data[1]),this.sendOK(e);break;case"EXPORT_FILE_STATISTICS":{this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"FILE_STATISTICS",data:this._bindings.exportFileStatistics(e.data)},[]);break}case"INSERT_ARROW_FROM_IPC_STREAM":{this._bindings.insertArrowFromIPCStream(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case"IMPORT_CSV_FROM_PATH":{this._bindings.insertCSVFromPath(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case"IMPORT_JSON_FROM_PATH":{this._bindings.insertJSONFromPath(e.data[0],e.data[1],e.data[2]),this.sendOK(e);break}case"TOKENIZE":{let r=this._bindings.tokenize(e.data);this.postMessage({messageId:this._nextMessageId++,requestId:e.messageId,type:"SCRIPT_TOKENS",data:r},[]);break}}}catch(r){return this.failWith(e,r)}}};var q=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),Q=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11]));var Y=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var j=()=>(async t=>{try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(t)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));var I={name:"@duckdb/duckdb-wasm",version:"1.16.1",description:"DuckDB powered by WebAssembly",license:"MPL-2.0",repository:{type:"git",url:"https://github.com/duckdb/duckdb-wasm.git"},keywords:["sql","duckdb","relational","database","data","query","wasm","analytics","olap","arrow","parquet","json","csv"],dependencies:{"apache-arrow":"^9.0.0"},devDependencies:{"@types/emscripten":"^1.39.6","@types/jasmine":"^4.3.0","@typescript-eslint/eslint-plugin":"^5.36.1","@typescript-eslint/parser":"^5.36.1",esbuild:"^0.15.6",eslint:"^8.23.0","eslint-plugin-jasmine":"^4.1.3","eslint-plugin-react":"^7.31.1","fast-glob":"^3.2.11",jasmine:"^4.3.0","jasmine-core":"^4.3.0","jasmine-spec-reporter":"^7.0.0","js-sha256":"^0.9.0",karma:"^6.4.0","karma-chrome-launcher":"^3.1.1","karma-coverage":"^2.2.0","karma-firefox-launcher":"^2.1.2","karma-jasmine":"^5.1.0","karma-jasmine-html-reporter":"^2.0.0","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"^0.0.34","make-dir":"^3.1.0",nyc:"^15.1.0",prettier:"^2.7.1",puppeteer:"^17.0.0",rimraf:"^3.0.2",s3rver:"^3.7.1",typedoc:"^0.23.13",typescript:"^4.7.4","wasm-feature-detect":"^1.2.11","web-worker":"^1.2.0"},scripts:{"build:debug":"node bundle.mjs debug && tsc --emitDeclarationOnly","build:release":"node bundle.mjs release && tsc --emitDeclarationOnly",docs:"typedoc",report:"node ./coverage.mjs","test:node":"node --enable-source-maps --experimental-wasm-eh ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs","test:node:debug":"node --inspect-brk --enable-source-maps --experimental-wasm-eh ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs","test:node:coverage":"nyc -r json --report-dir ./coverage/node node --experimental-wasm-eh ../../node_modules/jasmine/bin/jasmine ./dist/tests-node.cjs","test:firefox":"karma start ./karma/tests-firefox.cjs","test:chrome":"karma start ./karma/tests-chrome.cjs","test:chrome:eh":"karma start ./karma/tests-chrome-eh.cjs","test:chrome:coverage":"karma start ./karma/tests-chrome-coverage.cjs","test:browser":"karma start ./karma/tests-all.cjs","test:browser:debug":"karma start ./karma/tests-debug.cjs",test:"npm run test:chrome && npm run test:node","test:coverage":"npm run test:chrome:coverage && npm run test:node:coverage && npm run report",lint:"eslint src test"},files:["dist","!dist/types/test"],main:"dist/duckdb-browser.cjs",module:"dist/duckdb-browser.mjs",types:"dist/duckdb-browser.d.ts",jsdelivr:"dist/duckdb-browser.cjs",unpkg:"dist/duckdb-browser.mjs",sideEffects:!1,browser:{fs:!1,path:!1,perf_hooks:!1,os:!1,worker_threads:!1},exports:{"./dist/duckdb-mvp.wasm":"./dist/duckdb-mvp.wasm","./dist/duckdb-eh.wasm":"./dist/duckdb-eh.wasm","./dist/duckdb-coi.wasm":"./dist/duckdb-coi.wasm","./dist/duckdb-browser":"./dist/duckdb-browser.mjs","./dist/duckdb-browser.cjs":"./dist/duckdb-browser.cjs","./dist/duckdb-browser.mjs":"./dist/duckdb-browser.mjs","./dist/duckdb-browser-blocking":"./dist/duckdb-browser-blocking.mjs","./dist/duckdb-browser-blocking.mjs":"./dist/duckdb-browser-blocking.mjs","./dist/duckdb-browser-blocking.cjs":"./dist/duckdb-browser-blocking.cjs","./dist/duckdb-browser-coi.pthread.worker.js":"./dist/duckdb-browser-coi.pthread.worker.js","./dist/duckdb-browser-coi.worker.js":"./dist/duckdb-browser-coi.worker.js","./dist/duckdb-browser-eh.worker.js":"./dist/duckdb-browser-eh.worker.js","./dist/duckdb-browser-mvp.worker.js":"./dist/duckdb-browser-mvp.worker.js","./dist/duckdb-node":"./dist/duckdb-node.cjs","./dist/duckdb-node.cjs":"./dist/duckdb-node.cjs","./dist/duckdb-node-blocking":"./dist/duckdb-node-blocking.cjs","./dist/duckdb-node-blocking.cjs":"./dist/duckdb-node-blocking.cjs","./dist/duckdb-node-eh.worker.cjs":"./dist/duckdb-node-eh.worker.cjs","./dist/duckdb-node-mvp.worker.cjs":"./dist/duckdb-node-mvp.worker.cjs","./blocking":{browser:{types:"./dist/duckdb-browser-blocking.d.ts",import:"./dist/duckdb-browser-blocking.mjs",require:"./dist/duckdb-browser-blocking.cjs"},node:{types:"./dist/duckdb-node-blocking.d.ts",require:"./dist/duckdb-node-blocking.cjs",import:"./dist/duckdb-node-blocking.cjs"},types:"./dist/duckdb-browser-blocking.d.ts",import:"./dist/duckdb-browser-blocking.mjs",require:"./dist/duckdb-browser-blocking.cjs"},".":{browser:{types:"./dist/duckdb-browser.d.ts",import:"./dist/duckdb-browser.mjs",require:"./dist/duckdb-browser.cjs"},node:{types:"./dist/duckdb-node.d.ts",import:"./dist/duckdb-node.cjs",require:"./dist/duckdb-node.cjs"},types:"./dist/duckdb-browser.d.ts",import:"./dist/duckdb-browser.mjs",require:"./dist/duckdb-browser.cjs"}}};var A=I.name,w=I.version,P=I.version.split("."),ue=P[0],Te=P[1],Re=P[2];var W=()=>typeof navigator>"u",H=()=>W()?"node":navigator.userAgent,pe=()=>H().includes("Firefox"),_e=()=>/^((?!chrome|android).)*safari/i.test(H());function me(){let t=`https://cdn.jsdelivr.net/npm/${A}@${w}/dist/`;return{mvp:{mainModule:`${t}duckdb-mvp.wasm`,mainWorker:`${t}duckdb-browser-mvp.worker.js`},eh:{mainModule:`${t}duckdb-eh.wasm`,mainWorker:`${t}duckdb-browser-eh.worker.js`}}}var L=null,F=null,C=null,U=null,D=null;async function K(){return L==null&&(L=typeof BigInt64Array<"u"),F==null&&(F=await Q()),C==null&&(C=await j()),U==null&&(U=await Y()),D==null&&(D=await q()),{bigInt64Array:L,crossOriginIsolated:W()||globalThis.crossOriginIsolated||!1,wasmExceptions:F,wasmSIMD:U,wasmThreads:C,wasmBulkMemory:D}}async function Ie(t){let e=await K();if(e.wasmExceptions){if(e.wasmSIMD&&e.wasmThreads&&e.crossOriginIsolated&&t.coi)return{mainModule:t.coi.mainModule,mainWorker:t.coi.mainWorker,pthreadWorker:t.coi.pthreadWorker};if(t.eh)return{mainModule:t.eh.mainModule,mainWorker:t.eh.mainWorker,pthreadWorker:null}}return{mainModule:t.mvp.mainModule,mainWorker:t.mvp.mainWorker,pthreadWorker:null}}var z=g(J());async function ke(t){let e=new Request(t),r=await fetch(e),s=URL.createObjectURL(await r.blob());return new z.default(s)}
//# sourceMappingURL=duckdb-browser.cjs.map
